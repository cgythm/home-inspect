@import "_helpers.scss";
@import "_constants.scss";

html {
    &.wf-active {
        &,
        & > body {
            font-family: 'Quicksand', sans-serif;
        }
    }
    &,
    body {
        height: 100%;
        background-color: $color-bg;
        color: $color-fg;
    }
}

* {
    box-sizing: border-box;
}

@import "_svg.scss";

#about {
    > section {
        background-color: $color-pane-1;
    }
}

#services {
    > section {
        background-color: $color-pane-2;
    }

    a{
        color: inherit;    //can't use inheirt because border-bottom's 'inherit' doesn't refer to the same value.
        padding-bottom: 0.05em;
        border-bottom: transparentize($color-fg, 1-0.50) solid 2pt;
        &:hover{
            text-decoration: none;
            border-bottom: transparentize($color-fg, 1-0.90) solid 2pt;

        }
    }
}

#contact {
    > section {
        background-color: mix($color-pane-1, $color-pane-1, 0%);
        color: inherit;

    }
    a{
        color: inherit;    //can't use inheirt because border-bottom's 'inherit' doesn't refer to the same value.
        padding-bottom: 0.05em;
        border-bottom: transparentize($color-fg, 1-0.50) solid 2pt;
        &:hover{
            text-decoration: none;
            border-bottom: transparentize($color-fg, 1-0.90) solid 2pt;

        }
    }
}


div.cover {
    //one CSS 'type': a site-wrapper
    div.site-wrapper {
        display: table;
        width: 100%;
        height: 100%;
        height: 100vh;
        min-height: 100%;
        min-height: 100vh;
        //background color:
        -webkit-box-shadow: inset 0 0 100px rgba(0, 0, 0, .5);
        box-shadow: inset 0 0 100px rgba(0, 0, 0, .5);
    }
    div.site-wrapper-inner {
        //leaving this unnamed because we want
        //it to be generic.
        display: table-cell;
        vertical-align: top;
        @media (min-width: $bp-small) {
            vertical-align: middle;
        }
    }
    div.cover-container {
        margin-left: auto;
        margin-right: auto;
    }
    //a padding for the cover of 32px
    .inner {
        padding: $base-padding;
    }
    .masthead-brand {
        margin-top: 10px;
        margin-bottom: 10px;
        @media (min-width: $bp-small) {
            //this makes it hug the left side
            float: left;
        }
    }
    .masthead-nav {
        @media (min-width: $bp-small) {
            float: right;
        }
        > li {
            display: inline-block;
            > a {
                padding-right: 0;
                padding-left: 0;
                font-size: 16px;
                font-weight: bold;
                color: #fff;
                /* IE8 proofing */
                color: transparentize($color-fg, 1-0.75);
                border-bottom: 2px solid transparent;
                .active > &,
                .active > &:focus,
                .active > &:hover {
                    color: $color-active;
                    border: $color-active-border;
                }
                &:hover,
                &:focus {
                    background-color: transparent;
                    border-bottom-color: #a9a9a9;
                    border-bottom-color: rgba(255, 255, 255, .25);
                }
            }
            //this is a li element that has another li element
            //adject and before it. since flow is left to right
            //li + li will apply to li elements that has an li
            //left of it.
            & + li {
                margin-left: 20px;
            }
        }
    }
    //break points
    @media (min-width: $bp-small) {
        .masthead {
            //prevent scrolling the masthead
            position: absolute;
            //position: fixed;
            top: 0;
        }
        .mastfoot {
            //position: fixed;
            bottom: 0;
        }
    }
    @media (max-width: $bp-small) {
        .masthead,
        .mastfoot,
        .cover-container {
            width: 100%;
        }
    }
    @media (min-width: $bp-small+1) {
        .masthead,
        .mastfoot,
        .cover-container {
            //at any width greater than $bp-small
            //we constrain the cover to that dimension
            //width: $bp-small;
            width: 100%;
        }
    }
    @media (min-width: $bp-medium) {
        .masthead,
        .mastfoot,
        .cover-container {
            width: $bp-medium;
        }
    }
    //cover
    .cover {
        padding: $base-padding;
        & .btn-lg {
            padding: 10px 20px;
            font-weight: bold;
        }
    }
    //the branding element
    .masthead-brand {
        margin-top: 10px;
        margin-bottom: 10px;
    }
}


.site {
    position: relative;
    min-height: 100%;
    min-height: 100vh;
    width: 100%;
    width: 100vw;
    padding: $base-padding;
    > div {
        //each section
        margin-left: auto;
        margin-right: auto;
        @media (min-width: $bp-medium+1) {
            width: $bp-medium - ($base-padding*2);
        }
        @media (max-width: $bp-medium) {
            width: 100%;
        }
        > div {
            padding-top: 15px;
            > section {
                @media(min-width: $bp-small+1) {
                    @include section-padding($base-padding, $padding-in-between, $radius: $bradius);
                }
                @media(max-width: $bp-small) {
                    @include section-padding($base-padding/2,
                    $padding-in-between - 5,
                    3,
                    $radius: $bradius);
                }
            }
            &:last-child {
                padding-bottom: 15px;
            }
        }
    }
}

.g-arr {
    a {
        width: 32px;
        height: 32px;
        display: block;
        margin: 0 auto;
        > svg {
            width: 100%;
            height: auto;
            margin: 0 auto;
            fill: transparentize(white, 1 - 0.85);
        }
    }
}

section.service-area {
    ul {
        @include mq($to: 260px) {
            @include column-maker(1);
            padding-left: 0em;
        }
        @include mq($from: 261px,
        $to: $bp-ssmall - 1) {
            @include column-maker(2);
            padding-left: 0em;
            >li {
                //text-align: center;
            }
        }
        @include mq($bp-ssmall,
        $bp-medium - 1) {
            @include column-maker(3,
            25%);
            padding-left: 0em;
            >li {
                //text-align: center;
            }
        }
        @include mq($from: $bp-medium) {
            @include column-maker(3);
            padding-left: 0em;
            >li {
                //text-align: center;
            }
        }
        li {
            list-style: none;
        }
    }
}

blockquote {
    border-left: none;
    margin: 0 auto;
    max-width: 500px;
    &:before {
        color: transparentize(#ccc, 1 - 0.7);
        content: open-quote;
        font-size: 3em;
        line-height: 0.1em;
        margin-right: 0.25em;
        vertical-align: -0.45em;
    }
    p:after {
        color: transparentize(#ccc, 1 - 0.7);
        content: close-quote;
        font-size: 3em;
        line-height: 0.1em;
        margin-left: 0.25em;
        vertical-align: -0.5em;
    }
    P {
        display: inline;
    }
    > footer {
        color: transparentize($color-fg, 1 - 0.70);
        text-align: right;
    }
}

.like-h3 {
    margin-top: 1.17em;
    margin-bottom: 1.17em;
}

h4.slist {
    display: block;
    &:first-child {
        margin-top: 1.17em;
    }
    margin-top: 1em;
    margin-bottom: 1em;
}

.list {
    //text-align: center;
}

.h3-padding-top {
    padding-top: 1.17em;
}

div.mid-spacer {
    padding: 0.25em;
    width: 100%;
}

.center-align-xs {
    //text-align: inherit;
    @include mq($to: $bp-ssmall) {
        text-align: center;
    }
}

.center-align-sm {
    //text-align: inherit;
    @include mq($from: $bp-ssmall + 1, $to: $bp-small) {
        text-align: center;
    }
}

.no-padding {
    padding: 0 !important;
}

.no-padding-left {
    padding-left: 0 !important;
}

.h2-like-margin {
    //margin: .75rem 0;
    margin: 1.125em 0; //why? font-size: 1.5em, margin .75em. margin val is 1.5 * 0.75 = 1.125em;
}

.smsx-center {
    > li {
        @include mq($from: $bp-ssmall + 1, $to: $bp-small) {
            //text-align: center;
        }
        @include mq($to: $bp-ssmall) {
            //  text-align: center;
        }
    }
}

div.service-area {
    &.s {
        &:nth-child(3n-1) {
            text-align: center;
        }
        &:nth-child(3n) {
            text-align: right;
        }
    }
}

.area-served-title {
    @include mq($to: $bp-small) {
        margin-bottom: 0px;
    }
}


